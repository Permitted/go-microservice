version: '3'

silent: true

env:
  FRONT_END_BINARY: "frontApp"
  BROKER_BINARY: "brokerApp"
  AUTH_BINARY: "authApp"

tasks:
  # up: starts all containers in the background without forcing build
  up:
    cmds:
      - echo "Starting Docker images"
      - docker-compose up -d
      - echo "Docker images started"

  # up_build: stops docker-compose (if running), builds all projects and starts docker compose
  up_build:
    deps: [build_broker, build_auth]
    cmds:
      - echo "Stopping docker images (if running...)"
      - docker-compose down
      - echo "Building (when required) and starting docker images..."
      - docker-compose up --build -d
      - echo "Docker images built and started!"

  # down: stop docker compose
  down:
    cmds:
      - echo "Stopping docker compose..."
      - docker-compose down
      - echo "Done!"

  # build_broker: builds the broker binary as a linux executable
  build_broker:
    cmds:
      - echo "Building broker binary..."
      - cd ../broker-service && GOARCH=amd64 GOOS=linux CGO_ENABLED=0 go build -o {{.BROKER_BINARY}} ./cmd/api/
      - echo "Done!"

  # build_auth: builds the broker binary as a linux executable
  build_auth:
    cmds:
      - echo "Building broker binary..."
      - cd ../authentication-service && GOARCH=amd64 GOOS=linux CGO_ENABLED=0 go build -o {{.AUTH_BINARY}} ./cmd/api/
      - echo "Done!"

  # build_front: builds the front end binary
  build_front:
    cmds:
      - echo "Building front end binary..."
      - cd ../front-end && set CGO_ENABLED=0 && set GOOS=windows && go build -o {{.FRONT_END_BINARY}}{{exeExt}} ./cmd/web

  # start: starts the front end
  start:
    deps: [build_front]
    dir: ../front-end
    cmds:
      - echo "Starting front end..."
      - ./{{.FRONT_END_BINARY}}{{exeExt}}
      - echo "Done!"